/** 
 * 数字格式化,每三位加逗号
 * number: 传入需格式化数字
*/
function formateNumber(number) {
    var result = '', counter = 0, dot = number.toString().indexOf('.')
    if (dot > -1) {
        // 有小数部份
        var dotCnt = number.toString().substring(dot + 1, number.length)
        number = number.toString().split('.')[0]
        number = (number || 0).toString();
        for (var i = number.length - 1; i >= 0; i--) {
            counter++;
            result = number.charAt(i) + result;
            if (!(counter % 3) && i != 0) { result = ',' + result; }
        }
        result = result + '.' + dotCnt;
        return result;
    } else {
        // 没有小数部份
        var reg = getRegExp('(\d)(?=(?:\d{3})+$)', 'g')
        var text = number || 0
        return text.toString().replace(reg, '$1,')
    }
}

/** 
 * 时间戳转化为年 月 日 时 分 秒 
 * timestamp: 传入时间戳
 * format：返回格式，支持自定义，但参数必须与formateArr里保持一致 
*/
function formatTime(timestamp, format) {
    if (!format) {
        format = "yyyy-MM-dd hh:mm:ss";
    }
    timestamp = parseInt(timestamp);
    var realDate = getDate(timestamp), regYear = getRegExp("(y+)", "i");
    var date = [
        ["M+", formatNumber(realDate.getMonth() + 1)],
        ["d+", formatNumber(realDate.getDate())],
        ["h+", formatNumber(realDate.getHours())],
        ["m+", formatNumber(realDate.getMinutes())],
        ["s+", formatNumber(realDate.getSeconds())],
        ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
        ["S+", realDate.getMilliseconds()],
    ];
    var reg1 = regYear.exec(format);
    if (reg1) {
        format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length));
    }
    for (var i = 0; i < date.length; i++) {
        var k = date[i][0];
        var v = date[i][1];
        var reg2 = getRegExp("(" + k + ")").exec(format);
        if (reg2) {
            format = format.replace(reg2[1], reg2[1].length == 1
                ? v : ("00" + v).substring(("" + v).length));
        }
    }
    return format;
}
function formatNumber(n) {
    n = n.toString()
    return n[1] ? n : '0' + n
}



module.exports = {
    formateNumber: formateNumber,
    formatTime: formatTime
}